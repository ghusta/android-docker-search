<resources>

    <!-- Base application theme. -->
    <style name="AppTheme" parent="Theme.Material3.DayNight">
        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorOnPrimary">@color/colorOnPrimary</item>

        <item name="colorSecondary">@color/colorSecondary</item>
        <item name="colorOnSecondary">@color/colorOnSecondary</item>

        <item name="colorSurface">@color/colorSurface</item>
<!--        <item name="colorOnSurface">?attr/colorOnSurface</item>-->

        <item name="android:navigationBarColor">@color/colorPrimary</item>
        <item name="android:statusBarColor">@color/colorPrimaryVariant</item>

        <!-- See layout in file : mtrl_layout_snackbar -->
        <item name="snackbarStyle">@style/Custom.Snackbar</item>
        <!-- See layout in file : mtrl_layout_snackbar_include -->
        <item name="snackbarTextViewStyle">@style/Custom.SnackbarText</item>
        <item name="snackbarButtonStyle">@style/Custom.SnackbarButton</item>
    </style>

    <!-- Style for the Toolbar -->
    <style name="AppToolbarStyle.Primary" parent="Widget.MaterialComponents.Toolbar.Primary">
        <!-- Use a theme overlay to style elements within the Toolbar, including SearchView -->
        <item name="android:theme">@style/AppToolbarThemeOverlay</item>
        <item name="popupTheme">@style/AppToolbarPopupThemeOverlay</item>
    </style>

    <!-- Theme Overlay for the Toolbar (affects elements like title, icons, SearchView) -->
    <style name="AppToolbarThemeOverlay" parent="ThemeOverlay.MaterialComponents.Toolbar.Primary">
        <!-- Specific style for SearchView within this Toolbar theme overlay -->
        <!--        <item name="searchViewStyle">@style/AppSearchViewStyle</item>-->

        <!-- You can also try to influence the EditText inside the SearchView -->
        <item name="android:editTextColor">@color/search_view_edit_text_color</item>
        <item name="android:textColorHint">@color/search_view_hint_color</item>
    </style>

    <!-- Popup Theme Overlay for menus originating from the Toolbar -->
    <style name="AppToolbarPopupThemeOverlay" parent="ThemeOverlay.MaterialComponents.Light" />

    <!-- See : https://stackoverflow.com/questions/32425191/style-snackbar-in-theme-app#58607153 -->
    <style name="Custom.Snackbar" parent="Widget.Material3.Snackbar">
        <!-- Default attr with M2 : ?attr/colorOnSurface + colorSurface (https://github.com/material-components/material-components-android/blob/1.4.0/docs/components/Snackbar.md#container-attributes) -->
        <!-- Default attr with M3 : ?attr/colorSurfaceInverse (https://github.com/material-components/material-components-android/blob/1.5.0/docs/components/Snackbar.md#container-attributes) -->
        <item name="backgroundTint">@color/colorSurfaceInverse</item>
    </style>

    <style name="Custom.SnackbarText" parent="Widget.Material3.Snackbar.TextView">
        <!-- Default attr with M2 : ?attr/colorSurface (https://github.com/material-components/material-components-android/blob/1.4.0/docs/components/Snackbar.md#text-label-attributes) -->
        <!-- Default attr with M3 : ?attr/colorOnSurfaceInverse (https://github.com/material-components/material-components-android/blob/1.5.0/docs/components/Snackbar.md#text-label-attributes) -->
        <item name="android:textColor">@color/colorOnSurfaceInverse</item>
    </style>

    <style name="Custom.SnackbarButton" parent="Widget.Material3.Button.TextButton.Snackbar">
        <!-- Default attr with M2 : ?attr/colorPrimary (https://github.com/material-components/material-components-android/blob/1.4.0/docs/components/Snackbar.md#action-attributes) -->
        <!-- Default attr with M3 : ?attr/colorPrimaryInverse (https://github.com/material-components/material-components-android/blob/1.5.0/docs/components/Snackbar.md#action-attributes) -->
        <item name="android:textColor">@color/colorPrimaryInverse</item>
    </style>

</resources>
